services:
    - docker
variables:
    SLIDEIO_VERSION: "0.5"
    LINUX_ARTIFACT_DIR: "linux"
    LINUX_PY_ARTIFACT_DIR: "linux-py"
    MAC_PY_ARTIFACT_DIR: "mac-py"
    WINDOWS_ARTIFACT_DIR: "win"
    WINDOWS_PY_ARTIFACT_DIR: "win-py"
    PY_ARTIFACT_DIR: "python-wheels"
    DOC_ARTIFACT_DIR: "doc-dist"
stages:
    - build
    - test
    - collect
    - deployment

python-manylinux:
    image: booritas/slideio-manylinux2010:latest
    stage: build
    script:
        - pwd
        - ls -l src/slideio/drivers/zvi
        - python3 ./install.py -a conan
        - cd src/pybind
        - bash ./install.sh
        - cd ../..
        - mkdir ./${LINUX_PY_ARTIFACT_DIR}
        - cp src/pybind/wheelhouse/* ./${LINUX_PY_ARTIFACT_DIR}
    artifacts:
        paths:
            - ./${LINUX_PY_ARTIFACT_DIR}
cpp-ubuntu:
    variables:
        WHL_PACKAGE: "slideio-${SLIDEIO_VERSION}.${CI_PIPELINE_IID}-cp38-cp38-linux_x86_64.whl"
    image: booritas/slideio-ubuntu-clang-9:latest
    stage: build
    script:
        - python -m pip install Sphinx
        - python ./install.py -a build
        - cd ${CI_PROJECT_DIR}
        - mkdir ./${LINUX_ARTIFACT_DIR}
        - mkdir ./${LINUX_ARTIFACT_DIR}/release
        - mkdir ./${LINUX_ARTIFACT_DIR}/debug
        - cp build/Linux/release/bin/* ./${LINUX_ARTIFACT_DIR}/release
        - cp build/Linux/debug/bin/* ./${LINUX_ARTIFACT_DIR}/debug
        - cd ./src/pybind
        - python setup.py sdist bdist_wheel
        - python -m pip install --ignore-installed ./dist/${WHL_PACKAGE}
        - cd ${CI_PROJECT_DIR}
        - cd doc
        - make html
        - cd ${CI_PROJECT_DIR}
        - mkdir ${DOC_ARTIFACT_DIR}
        - cp -r doc/build/html ${DOC_ARTIFACT_DIR}
    artifacts:
        paths:
            - ./${LINUX_ARTIFACT_DIR}
            - ./${DOC_ARTIFACT_DIR}

cpp-test-ubuntu:
    image: booritas/slideio-ubuntu-clang-9:latest
    stage: test
    script:
        - git clone https://gitlab+deploy-token-168011:_4qq46H6PBb6hxEGFzBE@gitlab.com/bioslide/slideio_extra.git slideio_extra
        - export SLIDEIO_TEST_DATA_PATH=/builds/bioslide/slideio/slideio_extra/testdata/cv/slideio
        - cd ./${LINUX_ARTIFACT_DIR}/release
        - ./slideio_tests
    dependencies:
        - cpp-ubuntu
    needs: ["cpp-ubuntu"]

python-test-ubuntu:
    image: booritas/slideio-pytest:latest
    stage: test
    script:
        - ls -l
        - git clone https://gitlab+deploy-token-168011:_4qq46H6PBb6hxEGFzBE@gitlab.com/bioslide/slideio_extra.git slideio_extra
        - export SLIDEIO_TEST_DATA_PATH=/builds/bioslide/slideio/slideio_extra/testdata/cv/slideio
        - conda init bash
        - source ~/.bashrc
        - conda activate slideio
        - find ./${LINUX_PY_ARTIFACT_DIR} -name *cp38*.whl -exec pip install {} \;
        - cd /builds/bioslide/slideio/src/pytests/public
        - python -m unittest --verbose
    dependencies:
        - python-manylinux
    needs: ["python-manylinux"]
    
collect:
    stage: collect
    when: manual
    variables:
        GIT_STRATEGY: none
    script:
        - mkdir ./${PY_ARTIFACT_DIR}
        - cp ./${LINUX_PY_ARTIFACT_DIR}/* ./${PY_ARTIFACT_DIR}
        - cp -r ./${DOC_ARTIFACT_DIR}/* ./${PY_ARTIFACT_DIR}
        - cp ./${MAC_PY_ARTIFACT_DIR}/* ./${PY_ARTIFACT_DIR}
    artifacts:
        paths:
            - ./${PY_ARTIFACT_DIR}

build_mac:
    stage: build
    when: manual
    tags:
        - macos-slideio
    script:
        - source ~/.zshrc
        - conda init bash
        - conda activate conan
        - python install.py -a conan
        - cd src/pybind
        - bash ./install-mac.sh
        - cd ../..
        - mkdir ./${MAC_PY_ARTIFACT_DIR}
        - cp src/pybind/dist/*.whl ./${MAC_PY_ARTIFACT_DIR}
    artifacts:
        paths:
            - ./${MAC_PY_ARTIFACT_DIR}


cpp-windows:
    stage: build
    when: manual
    tags:
        - win-build
    script:
        - CALL c:/ProgramData/Anaconda3/condabin/conda.bat acitvate conan
        - python install.py -a build
        - mkdir ${WINDOWS_ARTIFACT_DIR}
        - mkdir ./${WINDOWS_ARTIFACT_DIR}/release
        - mkdir ./${WINDOWS_ARTIFACT_DIR}/debug
        - cp ./build/bin/Release/* ./${WINDOWS_ARTIFACT_DIR}/release
        - cp ./build/bin/Debug/* ./${WINDOWS_ARTIFACT_DIR}/debug
    artifacts:
        paths:
            - ./${WINDOWS_ARTIFACT_DIR}


deployment:
    image: booritas/slideio-pytest:latest
    stage: deployment
    variables:
        GIT_STRATEGY: none
    script:
        - conda init bash
        - source ~/.bashrc
        - conda activate slideio
        - python -m pip install twine
        - cd  ./${PY_ARTIFACT_DIR}
        - twine upload *.whl -u booritas -p "$TWINE_PASSWORD"
    when: manual
        